name: CI Pipeline
on:
  push:
    branches:
      - master

jobs:
  test-and-build:
    name: Test and Build iOS App
    runs-on: self-hosted
    environment:
      name: TEST_ENV

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2  

      # Step 2: Force the use of a specific Xcode version
      - name: Select Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

      # Step 3: Testing Swift package
      - name: Test Swift Package
        run: |
          chmod +x .github/scripts/test-swift.sh    
          sh .github/scripts/test-swift.sh

      # Step 4: Install xcpretty (for better test output formatting)
      - name: Install xcpretty
        run: sudo gem install xcpretty

      # Step 5: Testing iOS app
      - name: Test iOS App
        run: |
          chmod +x .github/scripts/test-app.sh      
          sh .github/scripts/test-app.sh  

     # Step 7: Build the app
      - name: Build the iOS app
        run: |
          xcodebuild \
            -workspace Calculator.xcworkspace \
            -scheme "Calculator iOS" \
            -destination 'platform=iOS Simulator,name=iPhone 16 Pro' \
            clean build


     # Step 8: Debug Build Output Path
      - name: Debug Build Output Path
        run: |
          echo "Contents of build/Build/Products/Debug-iphonesimulator:"
          ls -l ./build/Build/Products/Debug-iphonesimulator



      # Step 9: Run the app in the simulator
      - name: Run app in iOS Simulator
        run: |
          DEVICE_NAME="iPhone 16 Pro"
          BOOTED=$(xcrun simctl list devices | grep "$DEVICE_NAME" | grep "Booted")
          if [ -z "$BOOTED" ]; then
            xcrun simctl boot "$DEVICE_NAME"
          fi
          xcrun simctl install booted ./build/Build/Products/Debug-iphonesimulator/Calculator.app
          xcrun simctl launch booted com.your.bundle.identifier
